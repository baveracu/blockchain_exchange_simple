{"ast":null,"code":"import _regeneratorRuntime from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baveracu/workspace/web3/node/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/baveracu/workspace/web3/node/eth_swap/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport './App.css';\nimport Web3 from 'web3';\nimport EthSwap from '../abis/EthSwap.json';\nimport Token from '../abis/Token.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, tokenBalance, ethSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                });\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = Token.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                token = new web3.eth.Contract(Token.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 18;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 18:\n                tokenBalance = _context2.sent;\n                this.setState({\n                  tokenBalance: tokenBalance.toString()\n                });\n                _context2.next = 23;\n                break;\n\n              case 22:\n                window.alert('Token contract not deployed to detected network');\n\n              case 23:\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (ethSwapData) {\n                  ethSwap = new web3.eth.Contract(ethSwapData.abi, ethSwapData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  window.alert('Token contract not deployed to detected network');\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider using MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.buyTokens = function (etherAmount) {\n      _this.state.ethSwap.methods.buyTokens().send(etherAmount);\n    };\n\n    _this.state = {\n      account: '',\n      token: {},\n      ethSwap: {},\n      tokenBalance: 0,\n      ethBalance: 0,\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        content = React.createElement(Main, {\n          ethBalance: this.state.ethBalance,\n          tokenBalance: this.state.tokenBalance,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/baveracu/workspace/web3/node/eth_swap/src/components/App.js"],"names":["React","Component","Navbar","Main","Web3","EthSwap","Token","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","balanceOf","call","tokenBalance","toString","alert","ethSwapData","ethSwap","loading","ethereum","enable","currentProvider","props","buyTokens","etherAmount","send","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport './App.css'\nimport Web3 from 'web3'\nimport EthSwap from '../abis/EthSwap.json'\nimport Token from '../abis/Token.json'\n\nclass App extends Component {\n  \n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n    const ethBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ ethBalance: ethBalance })\n\n    const networkId = await web3.eth.net.getId()\n    const tokenData = Token.networks[networkId]\n    if(tokenData){\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\n      this.setState({ token })\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\n      this.setState({ tokenBalance: tokenBalance.toString()})\n    } else {\n      window.alert('Token contract not deployed to detected network')\n    }\n\n    const ethSwapData = EthSwap.networks[networkId]\n    if(ethSwapData){\n      const ethSwap = new web3.eth.Contract(ethSwapData.abi, ethSwapData.address)\n      this.setState({ ethSwap })\n    } else {\n      window.alert('Token contract not deployed to detected network')\n    }\n\n    this.setState({loading: false})\n  }\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if(window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider using MetaMask!')\n    }\n  }\n\n  buyTokens = (etherAmount) => {\n    this.state.ethSwap.methods.buyTokens().send(etherAmount)\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      token : {},\n      ethSwap: {},\n      tokenBalance: 0,\n      ethBalance: 0,\n      loading: true\n    }\n  }\n\n  render() {\n    let content\n    if(this.state.loading){\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\n    } else {\n      content = <Main\n                ethBalance={this.state.ethBalance}\n                tokenBalance={this.state.tokenBalance}\n                />\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account}/>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: '600px'}}>\n              <div className=\"content mr-auto ml-auto\">\n                <a href=\"http://www.dappuniversity.com/bootcamp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                ></a>\n                {content}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}